@model List<BlogPost>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@{
    ViewData["Title"] = "Top Posts";
}

<div class="text-center">
    <h1 class="display-4">Blog Posts</h1>
</div>

<div class="container">
    <div class="row align-items-center">
        <div class="col-md-10">
            <form method="post" action="/Blog/Filter" class="d-flex">
                <label for="poster" class="me-2">Author</label>
                <input id="poster" name="poster" class="form-control me-2" />
                <label for="date" class="me-2">Date</label>
                <input id="date" name="date" class="form-control me-2" />
                <button type="submit" class="btn btn-secondary">Filter</button>
            </form>
        </div>
        <div class="col-md-2 text-end">
            <a class="btn btn-primary" href="/Blog/BlogPost">Create Post</a>
        </div>
    </div>
</div>

<div class="container">
    @if (Model.Count != 0)
    {
        foreach (BlogPost blogPost in Model)
        {
            <div class="card p-3 mb-3">
                <div class="card-body">
                    <h5 class="card-title mb-2">@blogPost.PostTitle</h5>
                    <p class="card-text">
                        <strong>Author:</strong>@blogPost.Poster.UserName<br />
                        @blogPost.PostText <br />
                        <strong>Rating:</strong>@blogPost.PostRating<br />
                        <small class="text-muted">@blogPost.PostTime</small>
                    </p>
                    <h6 class="mt-3">Comments:</h6>
                    @if (blogPost.Comments?.Any() == true)
                    {
                        @foreach (var comment in blogPost.Comments)
                        {
                            <div class="card mb-2">
                                <div class="card-body">
                                    <strong>@comment.Commenter.UserName:</strong> @comment.CommentText<br />
                                    <small class="text-muted">Posted on: @comment.CommentDate</small>
                                    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                                    {
                                        <form asp-controller="Blog" asp-action="DeleteComment" method="post">
                                            <input type="hidden" asp-for="@comment.CommentID" name="CommentID" />
                                            <button type="submit" class="btn btn-danger">Delete Comment</button>
                                            @Html.AntiForgeryToken()
                                        </form>
                                    }
                                </div>
                            </div>
                        }
                    }
                    <a asp-controller="Blog" asp-action="Comment" asp-route-BlogPostID="@blogPost.BlogPostID" 
                    class="btn btn-secondary me-2">Add Comment</a>
                    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                    {
                        <form asp-controller="Blog" asp-action="DeleteBlogPost" method="post">
                            <input type="hidden" asp-for="@blogPost.BlogPostID" name="BlogPostID" />
                            <button type="submit" class="btn btn-danger">Delete Post</button>
                            @Html.AntiForgeryToken()
                        </form>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <p class="text-center">There are no blog posts right now.</p>
    }
</div>